import enum_properties
if enum_properties.DJANGO_SUPPORTED:  # pragma: no cover
    # Generated by Django 3.2.13 on 2022-07-13 16:43

    from django.db import migrations, models
    import enum_properties.django.fields
    import enum_properties.tests.django.app1.enums


    class Migration(migrations.Migration):

        initial = True

        dependencies = [
        ]

        operations = [
            migrations.CreateModel(
                name='EnumTester',
                fields=[
                    ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                    ('small_pos_int', enum_properties.django.fields.EnumPositiveSmallIntegerField(blank=True, choices=[(0, 'Value 1'), (2, 'Value 2'), (32767, 'Value 32767')], db_index=True, default=None, enum=enum_properties.tests.django.app1.enums.SmallPosIntEnum, null=True)),
                    ('small_int', enum_properties.django.fields.EnumSmallIntegerField(blank=True, choices=[(-32768, 'Value -32768'), (0, 'Value 0'), (1, 'Value 1'), (2, 'Value 2'), (32767, 'Value 32767')], db_index=True, default=32767, enum=enum_properties.tests.django.app1.enums.SmallIntEnum)),
                    ('pos_int', enum_properties.django.fields.EnumPositiveIntegerField(blank=True, choices=[(0, 'Value 0'), (1, 'Value 1'), (2, 'Value 2'), (2147483647, 'Value 2147483647')], db_index=True, default=2147483647, enum=enum_properties.tests.django.app1.enums.PosIntEnum)),
                    ('int', enum_properties.django.fields.EnumIntegerField(blank=True, choices=[(-2147483648, 'Value -2147483648'), (0, 'Value 0'), (1, 'Value 1'), (2, 'Value 2'), (2147483647, 'Value 2147483647')], db_index=True, enum=enum_properties.tests.django.app1.enums.IntEnum, null=True)),
                    ('big_pos_int', enum_properties.django.fields.EnumPositiveBigIntegerField(blank=True, choices=[(0, 'Value 0'), (1, 'Value 1'), (2, 'Value 2'), (2147483648, 'Value 2147483647')], db_index=True, default=None, enum=enum_properties.tests.django.app1.enums.BigPosIntEnum, null=True)),
                    ('big_int', enum_properties.django.fields.EnumBigIntegerField(blank=True, choices=[(-2147483649, 'Value -2147483649'), (1, 'Value 1'), (2, 'Value 2'), (2147483648, 'Value 2147483647')], db_index=True, default=-2147483649, enum=enum_properties.tests.django.app1.enums.BigIntEnum)),
                    ('constant', enum_properties.django.fields.EnumFloatField(blank=True, choices=[(3.141592653589793, 'Pi'), (2.71828, "Euler's Number"), (1.618033988749895, 'Golden Ratio')], db_index=True, default=None, enum=enum_properties.tests.django.app1.enums.Constants, null=True)),
                    ('text', enum_properties.django.fields.EnumCharField(blank=True, choices=[('V1', 'Value1'), ('V22', 'Value2'), ('V333', 'Value3'), ('D', 'Default')], db_index=True, default=None, enum=enum_properties.tests.django.app1.enums.TextEnum, max_length=4, null=True)),
                    ('int_choice', models.IntegerField(blank=True, choices=[(1, 'One'), (2, 'Two'), (3, 'Three')], default=1)),
                    ('char_choice', models.CharField(blank=True, choices=[('A', 'First'), ('B', 'Second'), ('C', 'Third')], default='A', max_length=1)),
                    ('int_field', models.IntegerField(blank=True, default=1)),
                    ('float_field', models.FloatField(blank=True, default=1.5)),
                    ('char_field', models.CharField(blank=True, default='A', max_length=1)),
                ],
                options={
                    'ordering': ('id',),
                },
            ),
        ]
